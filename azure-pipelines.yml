# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

strategy:
  matrix:
    jdk8_windows:
      imageName: "vs2017-win2016"
      jdk_version: "1.8"
    jdk11_windows:
      imageName: "vs2017-win2016"
      jdk_version: "1.11"

    jdk8_mac_Mojave:
      imageName: "macOS-10.14"
      jdk_version: "1.8"
    jdk11_mac_Mojave:
      imageName: "macOS-10.14"
      jdk_version: "1.11"

    jdk8_ubuntu_16:
      imageName: "ubuntu-16.04"
      jdk_version: "1.8"
    jdk11_ubuntu_16:
      imageName: "ubuntu-16.04"
      jdk_version: "1.11"

    jdk8_ubuntu_18:
      imageName: "ubuntu-18.04"
      jdk_version: "1.8"
    jdk11_ubuntu_18:
      imageName: "ubuntu-18.04"
      jdk_version: "1.11"

  maxParallel: 3

pool:
  vmImage: $(imageName)

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: $(jdk_version)
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'test'
